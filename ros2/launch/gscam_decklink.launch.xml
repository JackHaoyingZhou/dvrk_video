<!-- -*- mode: XML -*- -->

<!-- ROS2 version -->

<launch>
  <!-- This launchfile should bring up a node that broadcasts a ros image
       transport on /decklink/image_raw from the input channel of a BlackMagic
       DeckLink SDI capture card-->

  <!-- DeckLink config, run $ gst-inspect decklinksrc to see all the options for your card -->
  <arg name="camera_name" default="camera"/>
  <arg name="connection" default="sdi"/>
  <arg name="device" default="0"/>
  <arg name="namespace" default="/decklink"/>
  <arg name="crop_top" default="0"/>
  <arg name="crop_left" default="0"/>
  <arg name="crop_bottom" default="0"/>
  <arg name="crop_right" default="0"/>

  <node namespace="$(var namespace)" name="$(var camera_name)" pkg="gscam" exec="gscam_node" output="screen">
    <param name="camera_name" value="$(var camera_name)"/>
    <param name="camera_info_url" value="package://gscam/examples/uncalibrated_parameters.ini"/>
    <param name="gscam_config" value="decklinkvideosrc connection=$(var connection) device-number=$(var device) ! videocrop top=$(var crop_top) left=$(var crop_left) right=$(var crop_right) bottom=$(var crop_bottom) ! deinterlace ! videoconvert"/>
    <param name="frame_id" value="/decklink_frame"/>
    <!-- This needs to be set to false to avoid dropping tons of frames -->
    <param name="sync_sink" value="false"/>
  </node>

  <node name="decklink_transform" pkg="tf2_ros" exec="static_transform_publisher" args="1 2 3 0 -3.141 0 /world /decklink_frame"/>
</launch>
